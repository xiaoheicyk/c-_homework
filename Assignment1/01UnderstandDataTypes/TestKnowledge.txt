Test your Knowledge
    1. What type would you choose for the following “numbers”?
        A person’s telephone number
        string
        A person’s height
        float
        A person’s age
        uint
        A person’s gender (Male, Female, Prefer Not To Answer)
        char (or enum)
        A person’s salary
        decimal
        A book’s ISBN
        string
        A book’s price
        decimal
        A book’s shipping weight
        double
        A country’s population
        uint
        The number of stars in the universe
        ulong
        The number of employees in each of the small or medium businesses in the
        United Kingdom (up to about 50,000 employees per business)
        ushort
      
    2. What are the difference between value type and reference type variables? What is
       boxing and unboxing?
       Difference between value type and reference type:
       1) value type will directly hold the value while reference type will hold the memory address
          or reference for the value.
       2) value type is stored in the stack memory but reference type is stored in heap memory.
       3) value type will not be collected by garbage collector but reference will be collected
       4) value type is created by struct or enum while reference is created by class, interface, delegate or array;
       5) value type can not accept null values(int? a = null); reference types can accept null values;
       Boxing & unboxing
       - boxing is the operation to convert value type to the reference type/object;
       - unboxing is the operation to convert reference type/ object to value type;

    3. What is meant by the terms managed resource and unmanaged resource in .NET
    Managed resource: Managed resources are those that are directly handled by the .NET runtime's garbage 
    collector (GC). These resources are automatically allocated and deallocated by the 
    CLR (Common Language Runtime) without the need for explicit intervention by the developer.
    Unmanaged resource: Unmanaged resources are those that are not handled by the .NET runtime or garbage 
    collector. These are typically resources that are controlled by the underlying operating system or 
    external services. They require explicit cleanup, as the .NET GC does not know how to release them.
    (require explicit management,usually via IDisposable and Dispose())
    
    4. Whats the purpose of Garbage Collector in .NET?
    The Garbage Collector (GC) in .NET is a key component of the Common Language Runtime (CLR), and its 
    primary purpose is to automatically manage memory by allocating and deallocating memory for managed 
    objects. 
    
    
    